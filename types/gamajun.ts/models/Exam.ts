/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Assignment } from './Assignment';
import {
    AssignmentFromJSON,
    AssignmentFromJSONTyped,
    AssignmentToJSON,
} from './Assignment';

/**
 * 
 * @export
 * @interface Exam
 */
export interface Exam {
    /**
     * 
     * @type {string}
     * @memberof Exam
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof Exam
     */
    title?: string;
    /**
     * 
     * @type {string}
     * @memberof Exam
     */
    author?: string;
    /**
     * 
     * @type {Set<Assignment>}
     * @memberof Exam
     */
    assignments?: Set<Assignment>;
}

/**
 * Check if a given object implements the Exam interface.
 */
export function instanceOfExam(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ExamFromJSON(json: any): Exam {
    return ExamFromJSONTyped(json, false);
}

export function ExamFromJSONTyped(json: any, ignoreDiscriminator: boolean): Exam {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'title': !exists(json, 'title') ? undefined : json['title'],
        'author': !exists(json, 'author') ? undefined : json['author'],
        'assignments': !exists(json, 'assignments') ? undefined : (new Set((json['assignments'] as Array<any>).map(AssignmentFromJSON))),
    };
}

export function ExamToJSON(value?: Exam | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'title': value.title,
        'author': value.author,
        'assignments': value.assignments === undefined ? undefined : (Array.from(value.assignments as Set<any>).map(AssignmentToJSON)),
    };
}

