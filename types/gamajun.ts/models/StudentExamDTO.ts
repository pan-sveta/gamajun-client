/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface StudentExamDTO
 */
export interface StudentExamDTO {
    /**
     * 
     * @type {string}
     * @memberof StudentExamDTO
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof StudentExamDTO
     */
    title?: string;
    /**
     * 
     * @type {Date}
     * @memberof StudentExamDTO
     */
    accessibleFrom?: Date;
    /**
     * 
     * @type {Date}
     * @memberof StudentExamDTO
     */
    accessibleTo?: Date;
}

/**
 * Check if a given object implements the StudentExamDTO interface.
 */
export function instanceOfStudentExamDTO(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function StudentExamDTOFromJSON(json: any): StudentExamDTO {
    return StudentExamDTOFromJSONTyped(json, false);
}

export function StudentExamDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): StudentExamDTO {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'title': !exists(json, 'title') ? undefined : json['title'],
        'accessibleFrom': !exists(json, 'accessibleFrom') ? undefined : (new Date(json['accessibleFrom'])),
        'accessibleTo': !exists(json, 'accessibleTo') ? undefined : (new Date(json['accessibleTo'])),
    };
}

export function StudentExamDTOToJSON(value?: StudentExamDTO | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'title': value.title,
        'accessibleFrom': value.accessibleFrom === undefined ? undefined : (value.accessibleFrom.toISOString()),
        'accessibleTo': value.accessibleTo === undefined ? undefined : (value.accessibleTo.toISOString()),
    };
}

